# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from follower.v1 import follower_pb2 as follower_dot_v1_dot_follower__pb2


class FollowerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Subscribe = channel.unary_unary(
                '/follower.v1.FollowerService/Subscribe',
                request_serializer=follower_dot_v1_dot_follower__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=follower_dot_v1_dot_follower__pb2.SubscribeResponse.FromString,
                )
        self.Unsubscribe = channel.unary_unary(
                '/follower.v1.FollowerService/Unsubscribe',
                request_serializer=follower_dot_v1_dot_follower__pb2.UnsubscribeRequest.SerializeToString,
                response_deserializer=follower_dot_v1_dot_follower__pb2.UnsubscribeResponse.FromString,
                )
        self.GetFollowers = channel.unary_unary(
                '/follower.v1.FollowerService/GetFollowers',
                request_serializer=follower_dot_v1_dot_follower__pb2.GetFollowersRequest.SerializeToString,
                response_deserializer=follower_dot_v1_dot_follower__pb2.GetFollowersResponse.FromString,
                )
        self.GetFollowing = channel.unary_unary(
                '/follower.v1.FollowerService/GetFollowing',
                request_serializer=follower_dot_v1_dot_follower__pb2.GetFollowingRequest.SerializeToString,
                response_deserializer=follower_dot_v1_dot_follower__pb2.GetFollowingResponse.FromString,
                )
        self.GetClientTargets = channel.unary_unary(
                '/follower.v1.FollowerService/GetClientTargets',
                request_serializer=follower_dot_v1_dot_follower__pb2.GetClientTargetsRequest.SerializeToString,
                response_deserializer=follower_dot_v1_dot_follower__pb2.GetClientTargetsResponse.FromString,
                )


class FollowerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unsubscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFollowing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClientTargets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FollowerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Subscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=follower_dot_v1_dot_follower__pb2.SubscribeRequest.FromString,
                    response_serializer=follower_dot_v1_dot_follower__pb2.SubscribeResponse.SerializeToString,
            ),
            'Unsubscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Unsubscribe,
                    request_deserializer=follower_dot_v1_dot_follower__pb2.UnsubscribeRequest.FromString,
                    response_serializer=follower_dot_v1_dot_follower__pb2.UnsubscribeResponse.SerializeToString,
            ),
            'GetFollowers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowers,
                    request_deserializer=follower_dot_v1_dot_follower__pb2.GetFollowersRequest.FromString,
                    response_serializer=follower_dot_v1_dot_follower__pb2.GetFollowersResponse.SerializeToString,
            ),
            'GetFollowing': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFollowing,
                    request_deserializer=follower_dot_v1_dot_follower__pb2.GetFollowingRequest.FromString,
                    response_serializer=follower_dot_v1_dot_follower__pb2.GetFollowingResponse.SerializeToString,
            ),
            'GetClientTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClientTargets,
                    request_deserializer=follower_dot_v1_dot_follower__pb2.GetClientTargetsRequest.FromString,
                    response_serializer=follower_dot_v1_dot_follower__pb2.GetClientTargetsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'follower.v1.FollowerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FollowerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/follower.v1.FollowerService/Subscribe',
            follower_dot_v1_dot_follower__pb2.SubscribeRequest.SerializeToString,
            follower_dot_v1_dot_follower__pb2.SubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unsubscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/follower.v1.FollowerService/Unsubscribe',
            follower_dot_v1_dot_follower__pb2.UnsubscribeRequest.SerializeToString,
            follower_dot_v1_dot_follower__pb2.UnsubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/follower.v1.FollowerService/GetFollowers',
            follower_dot_v1_dot_follower__pb2.GetFollowersRequest.SerializeToString,
            follower_dot_v1_dot_follower__pb2.GetFollowersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFollowing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/follower.v1.FollowerService/GetFollowing',
            follower_dot_v1_dot_follower__pb2.GetFollowingRequest.SerializeToString,
            follower_dot_v1_dot_follower__pb2.GetFollowingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClientTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/follower.v1.FollowerService/GetClientTargets',
            follower_dot_v1_dot_follower__pb2.GetClientTargetsRequest.SerializeToString,
            follower_dot_v1_dot_follower__pb2.GetClientTargetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
